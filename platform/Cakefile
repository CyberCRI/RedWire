spawn = require "win-spawn"
fsextra = require "fs.extra"
fs = require "fs"
path = require "path"

path_to_site = "site"
path_to_gh_pages = ".temp_ghpages"


###
file structure

directory
  gamEvolve
    platform
      .temp_ghpages
        .git
    .git
###


spawnCall = (func, args, debug, callback) ->
  name = "subtask "+debug+" (spawn "+func+" "+args+")"
  call = spawn func, args
  call.stdout.on 'data', (data) -> console.log data.toString().trim()
  console.log name+" finished"
  call.on "exit", genericCallBack(callback)

build = (callback) ->
  spawnCall 'coffee', ['-c', '-o', 'site', 'src'], "build", callback

genericCallBack = (callback) -> 
  (error) -> 
    if error then throw new Error("ERROR: #{error}")
    if callback then callback()
  
reset = (callback) ->
  spawnCall 'git', ['--git-dir='+path_to_gh_pages+'/.git', '--work-tree='+path_to_gh_pages, 'reset'], "git reset gh-pages", callback

clone = (callback) ->
  fsextra.rmrf path_to_gh_pages, genericCallBack -> 
    spawnCall 'git', ['clone', '-n', '-b', 'gh-pages', 'https://github.com/CyberCRI/gamEvolve.git', path_to_gh_pages], "git clone into gh-pages", ->
      reset(callback)

###
    #spawnCall 'git', ['clone', '-b', 'https://github.com/CyberCRI/gamEvolve.git', path_to_gh_pages], "git clone into gh-pages"#, () -> console.log "job finished"

  #commitGhPages = (callback) ->
    #git --git-dir=../../temp_ghpages/.git --work-tree=../../temp_ghpages status

  #pushGhPages = (callback) ->
    #git --git-dir=../../temp_ghpages/.git --work-tree=../../temp_ghpages status

  #commitMaster = (callback) ->

  #pushMaster = (callback) ->
###

deploy = (callback) ->
  build () -> 
    #test () ->
    clone () ->
      fsextra.copyRecursive(path_to_site, path_to_gh_pages, genericCallBack(callback))
      #commit () ->
      #push () -> ...

task 'build', 'build once', ->
  build()
  console.log "task build finished"

task 'watch', 'continually build with --watch', ->
   spawnCall 'coffee', ['-cw', '-o', 'site', 'src'], "watch"

task 'doc', 'create documentation', ->
  spawnCall 'docco', ['src/*.coffee', 'src/tests/*.coffee'], "create doc"

task 'clone', 'clone gh-pages', ->
  clone()

task 'deploy', 'deploy on gh-pages', ->
  deploy()

task 'safe-push', 'if tests succeed, push', ->

#add options like on Coffeescript page
###
task 'safe-push-deploy', 'if tests succeed, deploy and push on master', ->
  deploy () ->
    commitOnMaster () ->
      pushOnMaster 
  
  
  

  #execute script in temp_ghpages to ci/pu? How to cross-platform?

  #cd ../temp_ghpages
  #git commit gh-pages
  #git push gh-pages
  #git commit master
  #git push master

  console.log "task safe-push finished"
###

