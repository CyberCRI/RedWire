{
  "action": "doInParallel",
  "children": [
    { 
      "send": {
        "services.graphics.shapes": "tools.drawShape({ type: 'image', asset: 'background', layer: 'bg', position: [0, 0] })" 
      }
    },
    {
      "action": "doInSequence",
      "params": {
        "in": {
          "activeChild": "model.topLevelActiveChild"
        },
        "out": {
          "model.topLevelActiveChild": "params.activeChild"
        }
      },
      "children": [
        {
          "action": "doForSomeTime",
          "params": {
            "in": {
              "time": "model.constants.startingTime",
              "timer": "model.timer"
            },
            "out": {
              "model.timer": "params.timer"
            }
          },
          "children": [
            { 
              "send": {
                "services.graphics.shapes": "tools.drawShape({ type: 'image', asset: 'title', layer: 'pieces', position: [100, 150] })" 
              }
            },
            {
              "send": {
                "services.graphics.shapes": "tools.drawShape({ type: 'text', text: 'Ready...', layer: 'text', position: [885, 150], strokeStyle: 'white', fillStyle: 'white', font: '16px Rix', align: 'center' })" 
              }
            },
            {
              "send": {
                "model.pieces": "model.constants.level.pieces",
                "model.boxedPieces": "model.constants.level.boxedPieces",
                "model.goalReached": false,
                "model.selected": "model.constants.level.selected"
              }
            }
          ]
        },
        {
          "action": "doWhile",
          "params": {
            "in": {
              "value": "!model.goalReached"
            }
          },
          "children": [ 
            {
              "action": "drawLight",
              "params": {
                "in": {
                  "pieces": "model.pieces",
                  "constants": "model.constants",
                  "goalReached": "model.goalReached"
                },
                "out": {
                  "services.graphics.shapes": "params.shapes",
                  "model.goalReached": "params.goalReached"
                }
              }
            },
            {
              "foreach": {
                "from": "model.pieces",
                "bindTo": "piece"
              },
              "children": [
                {
                  "action": "drawPiece",
                  "params": {
                    "in": {
                      "type" : "bindings.piece.type",
                      "row" : "bindings.piece.row",
                      "col" : "bindings.piece.col",
                      "rotation": "bindings.piece.rotation",
                      "constants": "model.constants",
                      "rotating": "model.rotating",
                      "selectedPiece": "model.selectedPiece"
                    },
                    "out": {
                      "services.graphics.shapes": "params.shapes"
                    }
                  }
                }
              ]
            },
            {
              "foreach": {
                "from": "model.boxedPieces",
                "bindTo": "piece",
                "index": "pieceIndex"
              },
              "children": [
                {
                  "action": "drawBoxedPiece",
                  "params": {
                    "in": {
                      "type": "bindings.piece.type",
                      "index": "bindings.pieceIndex",
                      "constants": "model.constants" 
                    },
                    "out": {
                      "services.graphics.shapes": "params.shapes"
                    }
                  }
                }
              ]
            },
            {
              "action": "drawSelected",
              "params": {
                "in": {
                  "row": "model.selected.row",
                  "col": "model.selected.col",
                  "constants": "model.constants"
                },
                "out": {
                  "services.graphics.shapes": "params.shapes"
                }
              }
            },
            {
              "action": "clickListener",
              "params": {
                "in": {
                  "keyboard": "services.keyboard",
                  "mouse": "services.mouse",
                  "constants": "model.constants",
                  "selected": "model.selected",
                  "selectedPiece": "model.selectedPiece",
                  "draggedPiece": "model.draggedPiece",
                  "rotating": "model.rotating",
                  "originalRotation": "model.originalRotation",
                  "originalPieceRotation": "model.originalPieceRotation",
                  "pieces": "model.pieces",
                  "boxedPieces": "model.boxedPieces",
                  "leftMouseDown": "model.leftMouseDown"
                },
                "out": {
                  "services.graphics.shapes": "params.shapes",
                  "model.selected": "params.selected",
                  "model.selectedPiece": "params.selectedPiece",
                  "model.draggedPiece": "params.draggedPiece",
                  "model.rotating": "params.rotating",
                  "model.originalRotation": "params.originalRotation" ,
                  "model.originalPieceRotation": "params.originalPieceRotation",
                  "model.pieces": "params.pieces",
                  "model.boxedPieces": "params.boxedPieces",
                  "model.leftMouseDown": "params.leftMouseDown"
                }
              }
            },
            {
              "action": "rotateSelectedPiece",
              "params": {
                "in": {
                  "selected": "model.selected",
                  "keyboard": "services.keyboard",
                  "constants": "model.constants",
                  "pieces": "model.pieces"
                },
                "out": {
                  "model.pieces": "params.pieces"
                }
              }
            },
            {
              "action": "if",
              "params": {
                "in": {
                  "value": "model.selectedPiece"
                }
              },
              "children": [
                {
                  "send": {
                    "services.graphics.shapes": "tools.drawShape({ layer: 'rotating', type: 'image', asset: model.rotating ? 'is-rotating' : 'can-rotate', scale: 0.5, position: [-208/2, -208/2], translation: tools.gridCellCenter(model.constants.boardGrid, [model.selectedPiece.col, model.selectedPiece.row]) })" 
                  }
                }
              ]
            },
            {
              "action": "if",
              "params": {
                "in": {
                  "value": "model.draggedPiece"
                }
              },
              "children": [
                {
                  "send": {
                    "services.mouse.cursor": "'move'",
                    "services.graphics.shapes": "tools.drawShape({ type: 'image', layer: 'drag', asset: model.draggedPiece.type, alpha: 0.5, position: [-model.constants.pieceAssetCentering, -model.constants.pieceAssetCentering], translation: services.mouse.position, rotation: model.draggedPiece.rotation })"
                  }
                },
                {
                  "action": "if",
                  "params": {
                    "in": {
                      "value": "tools.findGridElement(tools.gridCellAtPoint(model.constants.boardGrid, services.mouse.position), model.pieces) || tools.gridCellToIndex(model.boxedPieces, tools.gridCellAtPoint(model.constants.boxGrid, services.mouse.position))"
                    }
                  },
                  "children": [
                    {
                      "send": {
                        "services.mouse.cursor": "'pointer'"
                      }  
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "action": "doForSomeTime",
          "params": {
            "in": {
              "time": "model.constants.endingTime",
              "timer": "model.timer"
            },
            "out": {
              "model.timer": "params.timer"
            }
          },
          "children": [
            {
              "send": {
                "services.graphics.shapes": "tools.drawShape({ type: 'text', text: 'You win', layer: 'text', position: [885, 150], strokeStyle: 'white', fillStyle: 'white', font: '18px Rix', align: 'center' })" 
              }
            },
            {
              "foreach": {
                "from": "model.pieces",
                "bindTo": "piece"
              },
              "children": [
                {
                  "action": "drawPiece",
                  "params": {
                    "in": {
                      "type" : "bindings.piece.type",
                      "row" : "bindings.piece.row",
                      "col" : "bindings.piece.col",
                      "rotation": "bindings.piece.rotation",
                      "constants": "model.constants",
                      "rotating": "model.rotating",
                      "selectedPiece": "model.selectedPiece"
                    },
                    "out": {
                      "services.graphics.shapes": "params.shapes"
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
