{
	"action": "doInParallel",
	"children": [
		{
			"send": {
				"services.charts.test": "{ type: 'line', position: model.constants.chart.position, size: model.constants.chart.size, data: tools.generateChartData(model.userValue, model.networkValues, services.time) }"
			}
		},
		{
			"action": "updateHtmlTemplate",
			"params": {
				"in": {
					"htmlService": "services.html",
					"modelValues": "{ userValue: model.userValue }",
					"assetName": "'controls'",
					"templateName": "'controls'"
				},
				"out": {
					"services.html": "params.htmlService",
					"model.userValue": "params.modelValues.userValue"
				}
			}
		},
		{
			"action": "doPeriodically",
			"params": {
				"in": {
					"currentTime": "services.time",
					"lastTime": "model.lastNetworkRequestTime",
					"period": "model.constants.networkRequestPeriod"
				},
				"out": {
					"model.lastNetworkRequestTime": "params.lastTime"
				}
			},
			"children": [
				{
					"send": {
						"services.http.requests.random": "tools.makeRandomNumberRequest(20, 90, 10)"
					}
				}
			]
		},
		{
			"action": "if",
			"params": {
				"in": {
					"value": "services.http.responses && services.http.responses.random"
				}
			},
			"children": [
				{
					"send": {
						"model.networkValues": "tools.obtainRandomNumbers(services.http.responses.random)",
						"services.http.responses.random": null
					}
				}
			]
		}
	]
}
